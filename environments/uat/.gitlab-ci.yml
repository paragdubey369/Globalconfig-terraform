stages:
  - validate
  - plan
  - apply
  - destroy

variables:
  TF_VAR_proxmox_api_url: "https://gitlab.local/api2/json" 
  TF_VAR_proxmox_api_token_id: "$TF_VAR_proxmox_api_token_id"
  TF_VAR_proxmox_api_token_secret: "$TF_VAR_proxmox_api_token_secret"
  TF_CLI_CONFIG_FILE:  "$CI_PROJECT_DIR/.terraformrc"

  TF_INPUT: "false"
  
  TF_APPROVE: "-auto-approve"

before_script:
  - terraform --version
 

validate:
  stage: validate
  script:
    - terraform validate

plan:
  stage: plan
  script:
<<<<<<<< HEAD:environments/main/.gitlab-ci.yml
    - terraform plan -var-file="test.tfvars"
========
    - terraform plan -var-file="dev_s.tfvars"
>>>>>>>> dev_s:environment/dev_s/.gitlab-ci.yml

apply:
  stage: apply
  script:
<<<<<<<< HEAD:environments/main/.gitlab-ci.yml
    - terraform apply -auto-approve -var-file="test.tfvars"
========
    - terraform apply -auto-approve -var-file="dev_s.tfvars"
>>>>>>>> dev_s:environment/dev_s/.gitlab-ci.yml

  artifacts:
    paths:
      - terraform.tfstate
      - terraform.tfstate.backup
      - .terraform
    expire_in: 1 hour

destroy:
  stage: destroy
  script:
<<<<<<<< HEAD:environments/main/.gitlab-ci.yml
    - terraform destroy -auto-approve -var-file="test.tfvars"
========
    - terraform destroy -auto-approve -var-file="dev_s.tfvars"
>>>>>>>> dev_s:environment/dev_s/.gitlab-ci.yml
  when: manual
  dependencies:
    - apply

  artifacts:
    paths:
      - terraform.tfstate
      - terraform.tfstate.backup
      - .terraform
    expire_in: 1 hour