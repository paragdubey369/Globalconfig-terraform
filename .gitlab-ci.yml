stages:
  - check-infra
  - create-infra
  - destroy-infra

variables:
  ENV_DIR: "environments/uat"
  TF_APPROVE: "auto-approve"
  TF_INPUT: "false"

check-infra:
  stage: check-infra
  script:
    - echo "Checking for infrastructure state..."
    - cd $ENV_DIR
    - terraform refresh -var-file="uat.tfvars" -input=$TF_INPUT || echo "Refresh failed"
    - |
      if [ -f "terraform.tfstate" ]; then
        RESOURCE_COUNT=$(terraform state list 2>/dev/null | wc -l)
        echo "Resource count: $RESOURCE_COUNT"
        if [ "$RESOURCE_COUNT" -gt 0 ]; then
          echo "Infrastructure already exists. Skipping apply."
          touch infra_exists.flag
        else
          echo "No infrastructure found. Proceeding to create."
        fi
      else
        echo "No terraform.tfstate found. Proceeding to create."
      fi
  artifacts:
    paths:
      - $ENV_DIR/terraform.tfstate
      - $ENV_DIR/terraform.tfstate.backup
      - $ENV_DIR/.terraform
      - $ENV_DIR/outputs.json
      - $ENV_DIR/infra_exists.flag
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always

create-infra:
  stage: create-infra
  needs:
    - check-infra
  script:
    - |
      if [ -f $ENV_DIR/infra_exists.flag ]; then
        echo "Infra already exists. Skipping apply."
        exit 0
      fi
    - cd $ENV_DIR
    - terraform apply -$TF_APPROVE -input=$TF_INPUT -var-file="uat.tfvars"
  artifacts:
    paths:
      - $ENV_DIR/terraform.tfstate
      - $ENV_DIR/terraform.tfstate.backup
      - $ENV_DIR/.terraform
      - $ENV_DIR/outputs.json
      - $ENV_DIR/infra_exists.flag
    expire_in: 2 hours

destroy-infra:
  stage: destroy-infra
  needs:
    - create-infra
  script:
    - cd $ENV_DIR
    - terraform destroy -$TF_APPROVE -input=$TF_INPUT -var-file="uat.tfvars"
  when: manual
  artifacts:
    paths:
      - $ENV_DIR/terraform.tfstate
      - $ENV_DIR/terraform.tfstate.backup
      - $ENV_DIR/.terraform
      - $ENV_DIR/outputs.json
    expire_in: 2 hours