stages:
  - check-infra
  - create-infra
  - destroy-infra
  # - generate-inventory
  # - run-ansible

variables:
  ENV_DIR: "uat"         # Default
  TF_APPROVE: "-auto-approve"
  TF_INPUT: "false"
  # ANSIBLE_DIR: "playbooks"


check-infra:
  stage: check-infra
  script:
    - echo "Checking for infrastructure state..."
    - |
      if [ -f "environments/$ENV_DIR/terraform.tfstate" ]; then
        echo "Infrastructure already exists. Skipping apply."
        touch infra_exists.flag
      else
        echo "no infrastructure found . proceed to create"
      fi
  artifacts:
    paths:
      - infra_exists.flag
    expire_in: 1 hour

create-infra:
  stage: create-infra
  dependencies:
    - check-infra
  script:
    - |
      if [ -f infra_exists.flag ]; then
        echo "Infrastructure already exists. Skipping apply."
        exit 0
      fi
      terraform apply  -$TF_APPROVE -var-file="$ENV_DIR.tfvars"
  artifacts:
    paths:
      - environments/$ENV_DIR/terraform.tfstate
      - environments/$ENV_DIR/outputs.json
      - environments/$ENV_DIR/terraform.tfstate.backup
      - environments/$ENV_DIR/.terraform
    expire_in: 2 hrs

destroy-infra:
  stage: destroy
  script:
    - cd environments/$ENV_DIR
    - terraform destroy -$TF_APPROVE -var-file="$ENV_DIR.tfvars"
  when: manual

  artifacts:
    paths:
      - environments/$ENV_DIR/terraform.tfstate
      - environments/$ENV_DIR/outputs.json
      - environments/$ENV_DIR/terraform.tfstate.backup
      - environments/$ENV_DIR/.terraform
    expire_in: 2 hrs
 
